name: Continuous Integration (main)

on: [deployment_status]

jobs:
  install:
    if: ${{ github.event.deployment_status.state == 'success' && contains(github.event.deployment_status.target_url, 'heroku') != true }}
    need: install
    steps:
      - name: Check out repository
        uses: actions/checkout@v2

      - name: Set up caching
        uses: actions/cache@v2
        with:
          path: |
            ~/.cache/Cypress
            ~/.npm
            .next/cache
          key: ${{ runner.os }}-cache-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-cache-

      - name: Install dependencies
        uses: cypress-io/github-action@v2
        with:
          runTests: false

      - name: Report machine parameters
        run: npx cypress info

      - name: Run unit tests
        run: npm test

  tests:
    if: ${{ github.event.deployment_status.state == 'success' && contains(github.event.deployment_status.target_url, 'heroku') != true }}
    runs-on: ubuntu-latest
    need: install
    container: cypress/browsers:node14.16.0-chrome89-ff86
    strategy:
      fail-fast: false
      matrix:
        containers: [1, 2, 3, 4, 5, 6, 7, 8, 9]
    steps:
      - name: Check out repository
        uses: actions/checkout@v2

      - name: Set up caching
        uses: actions/cache@v2
        with:
          path: |
            ~/.cache/Cypress
            ~/.npm
            .next/cache
          key: ${{ runner.os }}-cache-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-cache-

      - name: Cypress run
        uses: cypress-io/github-action@v2
        with:
          record: true
          parallel: true
          group: 'Integration tests'
        env:
          CYPRESS_BASE_URL: ${{ github.event.deployment_status.target_url }}
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
